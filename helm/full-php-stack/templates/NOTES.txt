1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "php-stack.fullname" . }}-varnish)
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "php-stack.fullname" . }}-varnish'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "php-stack.fullname" . }}-varnish --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.varnish.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "php-stack.name" . }},app.kubernetes.io/instance={{ .Release.Name }},app.kubernetes.io/component=varnish" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Your PHP stack includes:
   - PHP {{ .Values.php.image.tag }} with {{ .Values.php.replicaCount }} replica(s)
   - MySQL database ({{ .Values.mysql.auth.database }})
   - Redis cache
   - Varnish frontend cache

3. Database connection details:
   - Host: {{ .Release.Name }}-mysql
   - Database: {{ .Values.mysql.auth.database }}
   - Username: {{ .Values.mysql.auth.username }}
   - Password: (stored in secret {{ .Release.Name }}-mysql)

4. Redis connection:
   - Host: {{ .Release.Name }}-redis-master
   - Port: 6379

{{- if .Values.php.uploads.enabled }}
5. File uploads are stored on NFS storage ({{ .Values.php.uploads.storageClass }})
   - Size: {{ .Values.php.uploads.size }}
{{- end }}

{{- if .Values.php.gitRepoUrl }}
6. Your application code was cloned from:
   - Repository: {{ .Values.php.gitRepoUrl }}
   - Tag/Branch: {{ .Values.php.gitRepoTag }}
{{- end }}
